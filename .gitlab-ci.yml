image: gitlab.corp.evernym.com:4567/dev/containers/build-sdk:5de0ac04

stages:
  - docker-images
  - test
  - package
  - doc
  - publish

variables:
  DEV_BASE_VERSION: "0.4.0"
  DEV_VERSION: '$DEV_BASE_VERSION-$CI_COMMIT_SHORT_SHA'

.java-common:
  cache:
    paths:
      - .m2/repository
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  before_script:
    - cd sdk/java-sdk/
    - mvn versions:set -DnewVersion=$DEV_VERSION

java-test:
  stage: test
  tags:
    - docker-machine
    - large
  extends:
    - .java-common
  script:
    - mvn pmd:check # Java SDK linting
    - mvn pmd:cpd-check # Java SDK linting
    - mvn test # Java SDK unit tests

java-package:
  stage: package
  tags:
    - docker-machine
    - micro
  extends:
    - .java-common
  script:
    - mvn package -DskipTests

java-doc:
  stage: doc
  tags:
    - docker-machine
    - micro
  extends:
    - .java-common
  script:
    - mvn javadoc:javadoc

java-publish:
  stage: publish
  tags:
    - docker-machine
    - micro
  extends:
    - .java-common
  script:
    - mvn --errors deploy --settings ./settings.xml -DskipTests
  when: on_success
  only:
    refs:
      - "master@dev/verity/verity-sdk"
    changes:
      - sdk/java-sdk/**/*
      - .gitlab-ci.yml

java-release:
  stage: publish
  tags:
    - s3docs
    - docker-machine
  extends:
    - .java-common
  script:
    - export RELEASE_VERSION=`echo $CI_COMMIT_TAG | cut -c2-`                        # pull version from tag name
    - gpg --batch --passphrase $OSSHR_GPG_PASSPHRASE --import $OSSRH_GPG_SIGNING_KEY # set GPG key to keyring
    - mvn versions:set -DnewVersion=$RELEASE_VERSION                                 # set version to tagged version
    - mvn clean deploy --settings ./settings.xml -DskipTests -P release              # deploy to sonatype OSSRH repo
    - mvn javadoc:javadoc                                                            # build javadoc
    - aws s3 sync doc/_build s3://developer.evernym.com/doc/java/$RELEASE_VERSION    # upload javadoc to s3
  allow_failure: true
  only:
    refs:
      - tags@dev/verity/verity-sdk

.python-common:
  variables:
    DEV_VERSION: '$DEV_BASE_VERSION.$CI_COMMIT_SHORT_SHA'
  before_script:
    - cd sdk/python-sdk/
    - echo "VERSION = '$DEV_VERSION'" > verity_sdk/version.py

python-test:
  stage: test
  tags:
    - docker-machine
    - micro
  extends:
    - .python-common
  script:
    - make lint # Python SDK linting
    - pytest    # Python SDK unit tests

python-package:
  stage: package
  tags:
    - docker-machine
    - micro
  extends:
    - .python-common
  script:
    - make build-artifacts

python-doc:
  stage: doc
  tags:
    - docker-machine
    - micro
  extends:
    - .python-common
  script:
    - make doc-build

python-publish:
  stage: publish
  tags:
    - docker-machine
    - micro
  extends:
    - .python-common
  script:
    - make upload
  only:
    refs:
      - "master@dev/verity/verity-sdk"
    changes:
      - sdk/python-sdk/**/*
      - .gitlab-ci.yml

python-release:
  stage: publish
  tags:
    - s3docs
    - docker-machine
  extends:
    - .python-common
  script:
    - export RELEASE_VERSION=`echo $CI_COMMIT_TAG | cut -c2-`                   # pull version from tag name
    - echo "VERSION = '$RELEASE_VERSION'" > verity_sdk/version.py               # set version to tagged version
    - echo "$RELEASE_VERSION"
    - make upload-to-pypi                                                       # upload to pypi
    - make doc-build                                                            # build doc
    - aws s3 sync doc/_build s3://developer.evernym.com/doc/python/$RELEASE_VERSION # upload javadoc to s3
  allow_failure: true
  only:
    refs:
      - tags@dev/verity/verity-sdk

.nodejs-common:
  before_script:
    - cd sdk/nodejs-sdk/
    - npm version --no-git-tag-version $DEV_VERSION

nodejs-test:
  stage: test
  tags:
    - docker-machine
    - micro
  extends:
    - .nodejs-common
  script:
    - npm install
    - npm run lint # Node.js linting
    - npm test # Node.js testing

nodejs-doc:
  stage: doc
  tags:
    - docker-machine
    - micro
  extends:
    - .nodejs-common
  script:
    - npm install
    - npm run doc-build

nodejs-publish:
  stage: publish
  tags:
    - docker-machine
    - micro
  extends:
    - .nodejs-common
  script:
    - npm run package
    - npm run publish
  only:
    refs:
      - master@dev/verity/verity-sdk
    changes:
      - sdk/nodejs-sdk/**/*
      - .gitlab-ci.yml

nodejs-release:
  stage: publish
  tags:
    - s3docs
    - docker-machine
  extends:
    - .nodejs-common
  script:
    - export RELEASE_VERSION=`echo $CI_COMMIT_TAG | cut -c2-`                       # pull version from tag name
    - npm version --no-git-tag-version $RELEASE_VERSION                             # set version to tagged version
    - npm install                                                                   # pre for publish
    - npm publish                                                                   # publish to npm
    - npm run doc-build                                                             # build doc
    - aws s3 sync doc/_build s3://developer.evernym.com/doc/nodejs/$RELEASE_VERSION # upload javadoc to s3
  allow_failure: true
  only:
    refs:
      - tags@dev/verity/verity-sdk